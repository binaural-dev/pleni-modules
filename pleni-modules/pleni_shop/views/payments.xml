<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <template id="price_bs_2" inherit_id="payment.payment_tokens_list">
        <xpath expr="//span[@class='payment_option_name']" position="after">
            <t t-set="amount_usd" t-value="website_sale_order.amount_total" />
            <t t-set="exchange" t-value="website_sale_order.amount_total * website_sale_order.currency_rate" />
            <input type="hidden" class="price_bs_input" t-att-value="exchange"/>
            <input type="hidden" class="price_usd_input" t-att-value="amount_usd"/>
            <style>
                .tag-price-bs {
                    padding-right: 0.6em;
                    padding-left: 0.6em;
                    border-radius: 10rem;
                    color: #212529;
                    background-color: #ffc107;
                }
            </style>
            <script type="text/javascript">
                Array.from(document.getElementsByClassName("payment_option_name")).forEach( element => {
                    if (['Pago MÃ³vil', 'Punto de venta','Transferencia Bancaria en Bs'].includes(element.textContent.trim().split('\n')[0])) {
                        let priceFloat = parseFloat(document.getElementsByClassName("price_bs_input")[0].value).toFixed(2).replace(".", ",")
                        if (!element.innerHTML.includes(priceFloat)) {
                            element.innerHTML = element.innerHTML + ' ' +  '<span class="tag-price-bs"><b>Bs. </b>' + '<b>' + priceFloat + '</b></span>'
                        }
                    } else if (['Efectivo', 'Transferencia Bancaria en US$','Zelle'].includes(element.textContent.trim().split('\n')[0])) {
                        let priceFloat = parseFloat(document.getElementsByClassName("price_usd_input")[0].value).toFixed(2).replace(".", ",")
                        if (!element.innerHTML.includes(priceFloat)) {
                            element.innerHTML = element.innerHTML + ' ' +  '<span class="tag-price-bs"><b>$ </b>' + '<b>' + priceFloat + '</b></span>'
                        }
                    }
                })
            </script>
        </xpath>
    </template>
	<template id="custom_payments_template" inherit_id="website_sale.payment">
        <xpath expr="//div[hasclass('oe_cart')]/div[hasclass('card')]" position="after">
			<div class="card mt-5" id="delivery_date_div">
                <div class="card-header text-white" style="background-color: #E4AE25; font-size: 14px; font-weight:bold">
                    2) Detalles de entrega
                </div>
                <div class="card-body" id="delivery_date_client_notes">  
                    <div class="row">      
                        <div class="col-lg-4">
                            <div><b>Fecha de Entrega:</b></div>
                            <input id="delivery_date" type="date" name="delivery_date" class="form-control o_website_form_input o_website_form_date address-inline"/>
                            <p id="date-name"></p>
                        </div>
                        <div class="col-lg-4">
                            <div><b> Bloque horario de preferencia:</b></div>
                            <select id="delivery_hour" name="delivery_hour" class="form-control s_website_form_input">
                                <option id="select-am" value="am" selected="True">AM</option>
                                <option id="select-pm" value="pm">PM</option>
                            </select>
                        </div>
                    </div>
                    <div class="row pt-3">      
                        <div class="col-lg-12">
                            <div><b>Observaciones:</b></div>
                            <textarea id="client_notes" type="text" class="form-control s_website_form_input" name="client_notes" rows="6"></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <script type="text/javascript">
                let today = new Date().toLocaleString("en-US", {timeZone: "America/Caracas"});
                let todayTimeZone = new Date(today);
                let todayHour = todayTimeZone.getHours();
                let todayMinutes = todayTimeZone.getMinutes();
                let tomorrow;
                let tomorrow_date;
                if (todayHour > 12) {
                    document.getElementById("select-am").setAttribute('selected', false);
                    document.getElementById("select-am").setAttribute('disabled', true);
                    document.getElementById("select-pm").setAttribute('selected', true);
                }
                if (todayHour > 16 ) {
                    if (todayMinutes > 0) {
                        tomorrow = todayTimeZone.setDate(todayTimeZone.getDate() + 2);
                        tomorrow_date = new Date(tomorrow).toLocaleDateString("en-US", {timeZone: "America/Caracas"}).split("/")
                        let dayInt = parseInt(tomorrow_date[1])
                        if (10 > dayInt) {
                            tomorrow_date[1] = "0" + dayInt
                        }

                        let monthInt = parseInt(tomorrow_date[0])
                        if (10 > monthInt) {
                            tomorrow_date[0] = "0" + monthInt
                        }
                        tomorrow_date = tomorrow_date[2]+"-"+tomorrow_date[0]+"-"+ tomorrow_date[1]
                        let dateName = new Date(tomorrow);
                        let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                        document.getElementById("date-name").innerHTML = dateName.toLocaleDateString('es-MX', options)
                        
                        document.getElementById("select-am").setAttribute('selected', '');
                        document.getElementById("select-am").removeAttribute('disabled');
                        document.getElementById("select-pm").removeAttribute('selected');
                    }
                } else {
                    tomorrow = todayTimeZone.setDate(todayTimeZone.getDate() + 1);
                    tomorrow_date = new Date(tomorrow).toLocaleDateString("en-US", {timeZone: "America/Caracas"}).split("/")
                    let dayInt = parseInt(tomorrow_date[1])
                    if (10 > dayInt) {
                        tomorrow_date[1] = "0" + dayInt
                    }

                    let monthInt = parseInt(tomorrow_date[0])
                    if (10 > monthInt) {
                        tomorrow_date[0] = "0" + monthInt
                    }
                    tomorrow_date = tomorrow_date[2]+"-"+tomorrow_date[0]+"-"+ tomorrow_date[1]
                    let dateName = new Date(tomorrow);
                    let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                    document.getElementById("date-name").innerHTML = dateName.toLocaleDateString('es-MX', options)
                    if (todayHour > 12) {
                        document.getElementById("select-am").setAttribute('selected', false);
                        document.getElementById("select-am").setAttribute('disabled', true);
                        document.getElementById("select-pm").setAttribute('selected', 'selected');
                    }
                }
                document.getElementsByName("delivery_date")[0].setAttribute('min', tomorrow_date);
                document.getElementsByName("delivery_date")[0].value = tomorrow_date

                document.getElementsByName("delivery_date")[0].addEventListener('change', (event) => {
                    let dateFormat = event.target.value.replace(/-/g,"/")
                    let date = new Date(dateFormat);
                    let options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                    document.getElementById("date-name").innerHTML = date.toLocaleDateString('es-ES', options)

                    let today = new Date().toLocaleString("en-US", {timeZone: "America/Caracas"});
                    let todayTimeZone = new Date(today);
                    let after_tomorrow = todayTimeZone.setDate(todayTimeZone.getDate() + 1);
                    let after_tomorrow_date = new Date(after_tomorrow).toLocaleDateString("en-US", {timeZone: "America/Caracas"}).split("/")
                    let dayInt = parseInt(after_tomorrow_date[1])
                    if (10 > dayInt) {
                        after_tomorrow_date[1] = "0" + dayInt
                    }
                    after_tomorrow_date = after_tomorrow_date[2]+"-"+after_tomorrow_date[0]+"-"+ after_tomorrow_date[1]
                    let after_date = new Date(after_tomorrow);

                    if (date > after_date) {
                        document.getElementById("select-am").setAttribute('selected', '');
                        document.getElementById("select-am").removeAttribute('disabled');
                        document.getElementById("select-pm").removeAttribute('selected');
                    }
                });

                localStorage.setItem("dateInit", new Date().toString());

                window.onfocus = function () {
                    let currentDate = new Date();
                    let date = localStorage.getItem('dateInit');

                    if (currentDate - Date.parse(date) > 900000) {
                        location.reload(); 
                    }
                };

                window.blur();
                setTimeout(window.onfocus, 0);

            </script>
        </xpath>


        <xpath expr="//div[hasclass('oe_cart')]/div[@id='payment_method']/h3[1]" position="attributes">
            <attribute name="style">display: none !important;</attribute>
        </xpath>


        <xpath expr="//div[hasclass('oe_cart')]/div[@id='payment_method']" 
            position="after">
            <script type="text/javascript">
                setTimeout(function () {
                    document.querySelectorAll("#payment_method form div.card").forEach((element) => {
                        element.style.display = 'none'
                    })
                }, 500);
            </script>
        </xpath>

        <xpath expr="//div[hasclass('oe_cart')]/div[@id='payment_method']" position="inside">

            <t t-set="show_payment_methods_value" t-value="website_sale_order.show_payment_methods()"/>
            <input type="hidden" id="show_payment_methods" t-att-value="show_payment_methods_value"/>
            <input type="hidden" id="sale_order_id" t-att-value="website_sale_order.id"/>

            <script type="text/javascript">
                if (document.getElementById("show_payment_methods").value == 'false') {
                    document.getElementById("o_payment_form_pay").style.display = 'none';
                    document.getElementById("pay_button_container").style.textAlign = 'center';
                }

            </script>
        </xpath>


        <xpath expr="//div[hasclass('oe_cart')]/div[@id='payment_method']" position="before">
            <div>
                <t t-set="pay_url" t-value="website_sale_order.get_payment_url()"/>
                <input type="hidden" id="pay_url" t-att-value="pay_url"/>

                <div style="text-align: right;" id="pay_button_container">
                    <a id="pay_button">
                        <div class="btn btn-primary as-btn my-5">
                            Pagar Ahora
                        </div>
                    </a>
                </div>
            </div>
            <script type="text/javascript">
                let newWindow;

                document.getElementById("pay_button").onclick = function() {  
                    newWindow = window.open(document.getElementById("pay_url").value);
                    setInterval(checkChild, 5000);
                };  

                const timer = setInterval(checkChild, 5000);

                function checkChild() {
                    if (newWindow) {
                        if (newWindow.closed) {
                            clearInterval(timer);
                            let sale_order_id = document.getElementById("sale_order_id").value
                            let url =  location.protocol + '//' + location.host 
                                    + '/processing_payment/'+ sale_order_id;
                            window.location.replace(url);
                        }
                    }
                }

            </script>
        </xpath>

        <xpath expr="//div[hasclass('oe_cart')]/div[@class='card']/div[1]" position="before">
            <div class="card-header text-white" style="background-color: #E4AE25; font-size: 14px; font-weight:bold">
                1) DirecciÃ³n de entrega
            </div>
        </xpath>

        <xpath expr="//div[@id='shipping_and_billing']" position="replace">
            <div class="card-body" id="shipping_and_billing">
                <a class='float-right no-decoration' href='/shop/checkout'><i class="fa fa-edit"/> Editar</a>
                <t t-set="same_shipping" t-value="bool(order.partner_shipping_id==order.partner_id or only_services)" />
                <t t-if="same_shipping and not only_services">
                    <div>
                        <b>EnvÃ­o:</b>
                        <span t-esc='order.partner_id' t-options="dict(widget='contact', fields=['address'], no_marker=True, separator=', ')" class="address-inline"/>
                    </div>
                </t>
                <t t-else="">
                    <span
                        style="color:#5e2129;font-style: italic;padding-bottom:10px;padding-top:5px;display:inline-block;">
                            Su direcciÃ³n fiscal no es la misma que la direcciÃ³n de entrega. 
                            Si desea cambiarlo, haga clic en el botÃ³n editar.
                    </span>
                    <div>
                        <b>FacturaciÃ³n:</b>
                        <span t-esc='order.partner_id' t-options="dict(widget='contact', fields=['address'], no_marker=True, separator=', ')" class="address-inline"/>
                    </div>
                    <div groups="sale.group_delivery_invoice_address">
                        <b>EnvÃ­o:</b>
                        <span t-esc='order.partner_shipping_id' t-options="dict(widget='contact', fields=['address'], no_marker=True, separator=', ')"  class="address-inline"/>
                    </div>
                </t>
            </div>
        </xpath>

    </template>

</odoo>